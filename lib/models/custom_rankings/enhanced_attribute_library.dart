import 'package:mds_home/models/custom_rankings/enhanced_ranking_attribute.dart';

class EnhancedAttributeLibrary {
  // Comprehensive attribute definitions based on Firebase playerSeasonStats data
  static final Map<String, List<EnhancedRankingAttribute>> _attributesByPosition = {
    'QB': [
      // Basic Passing Stats
      const EnhancedRankingAttribute(
        id: 'passing_yards',
        name: 'passing_yards',
        displayName: 'Passing Yards',
        description: 'Total passing yards for the season',
        category: 'Volume',
        position: 'QB',
        unit: 'yards',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['passing_yards'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'passing_tds',
        name: 'passing_tds',
        displayName: 'Passing TDs',
        description: 'Total passing touchdowns for the season',
        category: 'Volume',
        position: 'QB',
        unit: 'touchdowns',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['passing_tds'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'interceptions',
        name: 'interceptions',
        displayName: 'Interceptions',
        description: 'Total interceptions thrown',
        category: 'Efficiency',
        position: 'QB',
        unit: 'interceptions',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['interceptions'],
        calculationType: 'inverse',
      ),
      const EnhancedRankingAttribute(
        id: 'completion_percentage',
        name: 'completion_percentage',
        displayName: 'Completion %',
        description: 'Percentage of passes completed',
        category: 'Efficiency',
        position: 'QB',
        unit: '%',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['completion_percentage'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'passer_rating',
        name: 'passer_rating',
        displayName: 'Passer Rating',
        description: 'NFL passer rating (0-158.3)',
        category: 'Efficiency',
        position: 'QB',
        unit: 'rating',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['passer_rating'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'rushing_yards',
        name: 'rushing_yards',
        displayName: 'Rushing Yards',
        description: 'Total rushing yards for mobile QBs',
        category: 'Volume',
        position: 'QB',
        unit: 'yards',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['rushing_yards'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'rushing_tds',
        name: 'rushing_tds',
        displayName: 'Rushing TDs',
        description: 'Total rushing touchdowns',
        category: 'Volume',
        position: 'QB',
        unit: 'touchdowns',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['rushing_tds'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'fantasy_points_ppr',
        name: 'fantasy_points_ppr',
        displayName: 'Fantasy Points (PPR)',
        description: 'Total fantasy points in PPR format',
        category: 'Fantasy',
        position: 'QB',
        unit: 'points',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['fantasy_points_ppr'],
        calculationType: 'direct',
      ),
      // Advanced NextGen Stats
      const EnhancedRankingAttribute(
        id: 'avg_time_to_throw',
        name: 'avg_time_to_throw',
        displayName: 'Time to Throw',
        description: 'Average time from snap to throw',
        category: 'Advanced',
        position: 'QB',
        unit: 'seconds',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['avg_time_to_throw'],
        calculationType: 'inverse',
      ),
      const EnhancedRankingAttribute(
        id: 'avg_completed_air_yards',
        name: 'avg_completed_air_yards',
        displayName: 'Completed Air Yards',
        description: 'Average air yards on completed passes',
        category: 'Advanced',
        position: 'QB',
        unit: 'yards',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['avg_completed_air_yards'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'completion_percentage_above_expectation',
        name: 'completion_percentage_above_expectation',
        displayName: 'CPOE',
        description: 'Completion percentage above expectation',
        category: 'Advanced',
        position: 'QB',
        unit: '%',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['completion_percentage_above_expectation'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'aggressiveness',
        name: 'aggressiveness',
        displayName: 'Aggressiveness',
        description: 'Percentage of passes into tight coverage',
        category: 'Advanced',
        position: 'QB',
        unit: '%',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['aggressiveness'],
        calculationType: 'direct',
      ),
    ],
    'RB': [
      // Basic Rushing Stats
      const EnhancedRankingAttribute(
        id: 'rushing_yards',
        name: 'rushing_yards',
        displayName: 'Rushing Yards',
        description: 'Total rushing yards for the season',
        category: 'Volume',
        position: 'RB',
        unit: 'yards',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['rushing_yards'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'rushing_tds',
        name: 'rushing_tds',
        displayName: 'Rushing TDs',
        description: 'Total rushing touchdowns',
        category: 'Volume',
        position: 'RB',
        unit: 'touchdowns',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['rushing_tds'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'yards_per_carry',
        name: 'yards_per_carry',
        displayName: 'Yards per Carry',
        description: 'Average yards gained per rushing attempt',
        category: 'Efficiency',
        position: 'RB',
        unit: 'yards',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['yards_per_carry'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'receptions',
        name: 'receptions',
        displayName: 'Receptions',
        description: 'Total receptions for pass-catching backs',
        category: 'Volume',
        position: 'RB',
        unit: 'receptions',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['receptions'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'receiving_yards',
        name: 'receiving_yards',
        displayName: 'Receiving Yards',
        description: 'Total receiving yards',
        category: 'Volume',
        position: 'RB',
        unit: 'yards',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['receiving_yards'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'target_share',
        name: 'target_share',
        displayName: 'Target Share',
        description: 'Percentage of team targets',
        category: 'Opportunity',
        position: 'RB',
        unit: '%',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['target_share'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'fantasy_points_ppr',
        name: 'fantasy_points_ppr',
        displayName: 'Fantasy Points (PPR)',
        description: 'Total fantasy points in PPR format',
        category: 'Fantasy',
        position: 'RB',
        unit: 'points',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['fantasy_points_ppr'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'yards_per_touch',
        name: 'yards_per_touch',
        displayName: 'Yards per Touch',
        description: 'Average yards per rushing attempt + reception',
        category: 'Efficiency',
        position: 'RB',
        unit: 'yards',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['yards_per_touch'],
        calculationType: 'direct',
      ),
      // Advanced NextGen Stats
      const EnhancedRankingAttribute(
        id: 'rush_efficiency',
        name: 'rush_efficiency',
        displayName: 'Rush Efficiency',
        description: 'Rushing efficiency rating',
        category: 'Advanced',
        position: 'RB',
        unit: 'rating',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['rush_efficiency'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'rush_yards_over_expected',
        name: 'rush_yards_over_expected',
        displayName: 'RYOE',
        description: 'Rushing yards over expected',
        category: 'Advanced',
        position: 'RB',
        unit: 'yards',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['rush_yards_over_expected'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'avg_time_to_los',
        name: 'avg_time_to_los',
        displayName: 'Time to LOS',
        description: 'Average time to line of scrimmage',
        category: 'Advanced',
        position: 'RB',
        unit: 'seconds',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['avg_time_to_los'],
        calculationType: 'inverse',
      ),
    ],
    'WR': [
      // Basic Receiving Stats
      const EnhancedRankingAttribute(
        id: 'receptions',
        name: 'receptions',
        displayName: 'Receptions',
        description: 'Total receptions for the season',
        category: 'Volume',
        position: 'WR',
        unit: 'receptions',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['receptions'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'receiving_yards',
        name: 'receiving_yards',
        displayName: 'Receiving Yards',
        description: 'Total receiving yards',
        category: 'Volume',
        position: 'WR',
        unit: 'yards',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['receiving_yards'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'receiving_tds',
        name: 'receiving_tds',
        displayName: 'Receiving TDs',
        description: 'Total receiving touchdowns',
        category: 'Volume',
        position: 'WR',
        unit: 'touchdowns',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['receiving_tds'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'targets',
        name: 'targets',
        displayName: 'Targets',
        description: 'Total targets received',
        category: 'Opportunity',
        position: 'WR',
        unit: 'targets',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['targets'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'target_share',
        name: 'target_share',
        displayName: 'Target Share',
        description: 'Percentage of team targets',
        category: 'Opportunity',
        position: 'WR',
        unit: '%',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['target_share'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'yards_per_reception',
        name: 'yards_per_reception',
        displayName: 'Yards per Reception',
        description: 'Average yards gained per reception',
        category: 'Efficiency',
        position: 'WR',
        unit: 'yards',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['yards_per_reception'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'catch_percentage',
        name: 'catch_percentage',
        displayName: 'Catch Rate',
        description: 'Percentage of targets caught',
        category: 'Efficiency',
        position: 'WR',
        unit: '%',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['catch_percentage'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'fantasy_points_ppr',
        name: 'fantasy_points_ppr',
        displayName: 'Fantasy Points (PPR)',
        description: 'Total fantasy points in PPR format',
        category: 'Fantasy',
        position: 'WR',
        unit: 'points',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['fantasy_points_ppr'],
        calculationType: 'direct',
      ),
      // Advanced Stats
      const EnhancedRankingAttribute(
        id: 'air_yards_share',
        name: 'air_yards_share',
        displayName: 'Air Yards Share',
        description: 'Percentage of team air yards',
        category: 'Opportunity',
        position: 'WR',
        unit: '%',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['air_yards_share'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'avg_depth_of_target',
        name: 'avg_depth_of_target',
        displayName: 'Average Depth of Target',
        description: 'Average depth of targets downfield',
        category: 'Advanced',
        position: 'WR',
        unit: 'yards',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['avg_depth_of_target'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'avg_separation',
        name: 'avg_separation',
        displayName: 'Average Separation',
        description: 'Average separation from defender at catch',
        category: 'Advanced',
        position: 'WR',
        unit: 'yards',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['avg_separation'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'avg_cushion',
        name: 'avg_cushion',
        displayName: 'Average Cushion',
        description: 'Average cushion from defender at snap',
        category: 'Advanced',
        position: 'WR',
        unit: 'yards',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['avg_cushion'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'wopr',
        name: 'wopr',
        displayName: 'WOPR',
        description: 'Weighted Opportunity Rating',
        category: 'Advanced',
        position: 'WR',
        unit: 'rating',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['wopr'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'racr',
        name: 'racr',
        displayName: 'RACR',
        description: 'Receiver Air Conversion Ratio',
        category: 'Advanced',
        position: 'WR',
        unit: 'ratio',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['racr'],
        calculationType: 'direct',
      ),
    ],
    'TE': [
      // Basic Receiving Stats (similar to WR but TE-specific)
      const EnhancedRankingAttribute(
        id: 'receptions',
        name: 'receptions',
        displayName: 'Receptions',
        description: 'Total receptions for the season',
        category: 'Volume',
        position: 'TE',
        unit: 'receptions',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['receptions'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'receiving_yards',
        name: 'receiving_yards',
        displayName: 'Receiving Yards',
        description: 'Total receiving yards',
        category: 'Volume',
        position: 'TE',
        unit: 'yards',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['receiving_yards'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'receiving_tds',
        name: 'receiving_tds',
        displayName: 'Receiving TDs',
        description: 'Total receiving touchdowns',
        category: 'Volume',
        position: 'TE',
        unit: 'touchdowns',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['receiving_tds'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'targets',
        name: 'targets',
        displayName: 'Targets',
        description: 'Total targets received',
        category: 'Opportunity',
        position: 'TE',
        unit: 'targets',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['targets'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'target_share',
        name: 'target_share',
        displayName: 'Target Share',
        description: 'Percentage of team targets',
        category: 'Opportunity',
        position: 'TE',
        unit: '%',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['target_share'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'yards_per_reception',
        name: 'yards_per_reception',
        displayName: 'Yards per Reception',
        description: 'Average yards gained per reception',
        category: 'Efficiency',
        position: 'TE',
        unit: 'yards',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['yards_per_reception'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'catch_percentage',
        name: 'catch_percentage',
        displayName: 'Catch Rate',
        description: 'Percentage of targets caught',
        category: 'Efficiency',
        position: 'TE',
        unit: '%',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['catch_percentage'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'fantasy_points_ppr',
        name: 'fantasy_points_ppr',
        displayName: 'Fantasy Points (PPR)',
        description: 'Total fantasy points in PPR format',
        category: 'Fantasy',
        position: 'TE',
        unit: 'points',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['fantasy_points_ppr'],
        calculationType: 'direct',
      ),
      // Advanced Stats
      const EnhancedRankingAttribute(
        id: 'air_yards_share',
        name: 'air_yards_share',
        displayName: 'Air Yards Share',
        description: 'Percentage of team air yards',
        category: 'Opportunity',
        position: 'TE',
        unit: '%',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['air_yards_share'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'avg_separation',
        name: 'avg_separation',
        displayName: 'Average Separation',
        description: 'Average separation from defender at catch',
        category: 'Advanced',
        position: 'TE',
        unit: 'yards',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['avg_separation'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'avg_cushion',
        name: 'avg_cushion',
        displayName: 'Average Cushion',
        description: 'Average cushion from defender at snap',
        category: 'Advanced',
        position: 'TE',
        unit: 'yards',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['avg_cushion'],
        calculationType: 'direct',
      ),
      const EnhancedRankingAttribute(
        id: 'wopr',
        name: 'wopr',
        displayName: 'WOPR',
        description: 'Weighted Opportunity Rating',
        category: 'Advanced',
        position: 'TE',
        unit: 'rating',
        weight: 1.0,
        dataSource: 'firebase',
        csvMappings: ['wopr'],
        calculationType: 'direct',
      ),
    ],
  };

  // Get attributes for a specific position
  static List<EnhancedRankingAttribute> getAttributesForPosition(String position) {
    return _attributesByPosition[position] ?? [];
  }

  // Get all available positions
  static List<String> getAvailablePositions() {
    return _attributesByPosition.keys.toList();
  }

  // Get attributes by category for a position
  static Map<String, List<EnhancedRankingAttribute>> getAttributesByCategory(String position) {
    final attributes = getAttributesForPosition(position);
    final categorized = <String, List<EnhancedRankingAttribute>>{};
    
    for (final attribute in attributes) {
      if (!categorized.containsKey(attribute.category)) {
        categorized[attribute.category] = [];
      }
      categorized[attribute.category]!.add(attribute);
    }
    
    return categorized;
  }

  // Get a specific attribute by ID
  static EnhancedRankingAttribute? getAttributeById(String position, String attributeId) {
    final attributes = getAttributesForPosition(position);
    try {
      return attributes.firstWhere((attr) => attr.id == attributeId);
    } catch (e) {
      return null;
    }
  }

  // Get default attributes for quick setup
  static List<EnhancedRankingAttribute> getDefaultAttributesForPosition(String position) {
    final allAttributes = getAttributesForPosition(position);
    
    // Return top 5-6 most important attributes per position
    switch (position) {
      case 'QB':
        return allAttributes.where((attr) => [
          'fantasy_points_ppr',
          'passing_yards',
          'passing_tds',
          'completion_percentage',
          'rushing_yards',
        ].contains(attr.id)).toList();
      case 'RB':
        return allAttributes.where((attr) => [
          'fantasy_points_ppr',
          'rushing_yards',
          'rushing_tds',
          'receptions',
          'yards_per_touch',
        ].contains(attr.id)).toList();
      case 'WR':
        return allAttributes.where((attr) => [
          'fantasy_points_ppr',
          'receiving_yards',
          'receiving_tds',
          'targets',
          'target_share',
          'avg_separation',
        ].contains(attr.id)).toList();
      case 'TE':
        return allAttributes.where((attr) => [
          'fantasy_points_ppr',
          'receiving_yards',
          'receiving_tds',
          'targets',
          'target_share',
        ].contains(attr.id)).toList();
      default:
        return allAttributes.take(5).toList();
    }
  }
} 